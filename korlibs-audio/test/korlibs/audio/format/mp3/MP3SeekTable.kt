package korlibs.audio.format.mp3

import korlibs.audio.format.*
import korlibs.io.async.*
import korlibs.io.file.std.*
import korlibs.io.stream.*
import kotlin.test.*

class MP3SeekTable {
    @Test
    fun test() = suspendTest {
        val parser = MP3Base.Parser(resourcesVfs["Snowland.mp3"].readAll().openAsync())
        val table = parser.getSeekingTable()
        assertEquals(
            listOf(142, 526, 910, 1294, 1678, 2062, 2446, 2830, 3214, 3598, 3982, 4366, 4750, 5134, 5518, 5902, 6286, 6670, 7054, 7438, 7822, 8206, 8590, 8974, 9358, 9742, 10126, 10510, 10894, 11278, 11662, 12046, 12430, 12814, 13198, 13582, 13966, 14350, 14734, 15118, 15502, 15886, 16270, 16654, 17038, 17422, 17806, 18190, 18574, 18958, 19342, 19726, 20110, 20494, 20878, 21262, 21646, 22030, 22414, 22798, 23182, 23566, 23950, 24334, 24718, 25102, 25486, 25870, 26254, 26638, 27022, 27406, 27790, 28174, 28558, 28942, 29326, 29710, 30094, 30478, 30862, 31246, 31630, 32014, 32398, 32782, 33166, 33550, 33934, 34318, 34702, 35086, 35470, 35854, 36238, 36622, 37006, 37390, 37774, 38158, 38542, 38926, 39310, 39694, 40078, 40462, 40846, 41230, 41614, 41998, 42382, 42766, 43150, 43534, 43918, 44302, 44686, 45070, 45454, 45838, 46222, 46606, 46990, 47374, 47758, 48142, 48526, 48910, 49294, 49678, 50062, 50446, 50830, 51214, 51598, 51982, 52366, 52750, 53134, 53518, 53902, 54286, 54670, 55054, 55438, 55822, 56206, 56590, 56974, 57358, 57742, 58126, 58510, 58894, 59278, 59662, 60046, 60430, 60814, 61198, 61582, 61966, 62350, 62734, 63118, 63502, 63886, 64270, 64654, 65038, 65422, 65806, 66190, 66574, 66958, 67342, 67726, 68110, 68494, 68878, 69262, 69646, 70030, 70414, 70798, 71182, 71566, 71950, 72334, 72718, 73102, 73486, 73870, 74254, 74638, 75022, 75406, 75790, 76174, 76558, 76942, 77326, 77710, 78094, 78478, 78862, 79246, 79630, 80014, 80398, 80782, 81166, 81550, 81934, 82318, 82702, 83086, 83470, 83854, 84238, 84622, 85006, 85390, 85774, 86158, 86542, 86926, 87310, 87694, 88078, 88462, 88846, 89230, 89614, 89998, 90382, 90766, 91150, 91534, 91918, 92302, 92686, 93070, 93454, 93838, 94222, 94606, 94990, 95374, 95758, 96142, 96526, 96910, 97294, 97678, 98062, 98446, 98830, 99214, 99598, 99982, 100366, 100750, 101134, 101518, 101902, 102286, 102670, 103054, 103438, 103822, 104206, 104590, 104974, 105358, 105742, 106126, 106510, 106894, 107278, 107662, 108046, 108430, 108814, 109198, 109582, 109966, 110350, 110734, 111118, 111502, 111886, 112270, 112654, 113038, 113422, 113806, 114190, 114574, 114958, 115342, 115726, 116110, 116494, 116878, 117262, 117646, 118030, 118414, 118798, 119182, 119566, 119950, 120334, 120718, 121102, 121486, 121870, 122254, 122638, 123022, 123406, 123790, 124174, 124558, 124942, 125326, 125710, 126094, 126478, 126862, 127246, 127630, 128014, 128398, 128782, 129166, 129550, 129934, 130318, 130702, 131086, 131470, 131854, 132238, 132622, 133006, 133390, 133774, 134158, 134542, 134926, 135310, 135694, 136078, 136462, 136846, 137230, 137614, 137998, 138382, 138766, 139150, 139534, 139918, 140302, 140686, 141070, 141454, 141838, 142222, 142606, 142990, 143374, 143758, 144142, 144526, 144910, 145294, 145678, 146062, 146446, 146830, 147214, 147598, 147982, 148366, 148750, 149134, 149518, 149902, 150286, 150670, 151054, 151438, 151822, 152206, 152590, 152974, 153358, 153742, 154126, 154510, 154894, 155278, 155662, 156046, 156430, 156814, 157198, 157582, 157966, 158350, 158734, 159118, 159502, 159886, 160270, 160654, 161038, 161422, 161806, 162190, 162574, 162958, 163342, 163726, 164110, 164494, 164878, 165262, 165646, 166030, 166414, 166798, 167182, 167566, 167950, 168334, 168718, 169102, 169486, 169870, 170254, 170638, 171022, 171406, 171790, 172174, 172558, 172942, 173326, 173710, 174094, 174478, 174862, 175246, 175630, 176014, 176398, 176782, 177166, 177550, 177934, 178318, 178702, 179086, 179470, 179854, 180238, 180622, 181006, 181390, 181774, 182158, 182542, 182926, 183310, 183694, 184078, 184462, 184846, 185230, 185614, 185998, 186382, 186766, 187150, 187534, 187918, 188302, 188686, 189070, 189454),
            table.filePositions.map { it.toInt() }
        )
        assertEquals(
            listOf(0, 24000, 48000, 72000, 96000, 120000, 144000, 168000, 192000, 216000, 240000, 264000, 288000, 312000, 336000, 360000, 384000, 408000, 432000, 456000, 480000, 504000, 528000, 552000, 576000, 600000, 624000, 648000, 672000, 696000, 720000, 744000, 768000, 792000, 816000, 840000, 864000, 888000, 912000, 936000, 960000, 984000, 1008000, 1032000, 1056000, 1080000, 1104000, 1128000, 1152000, 1176000, 1200000, 1224000, 1248000, 1272000, 1296000, 1320000, 1344000, 1368000, 1392000, 1416000, 1440000, 1464000, 1488000, 1512000, 1536000, 1560000, 1584000, 1608000, 1632000, 1656000, 1680000, 1704000, 1728000, 1752000, 1776000, 1800000, 1824000, 1848000, 1872000, 1896000, 1920000, 1944000, 1968000, 1992000, 2016000, 2040000, 2064000, 2088000, 2112000, 2136000, 2160000, 2184000, 2208000, 2232000, 2256000, 2280000, 2304000, 2328000, 2352000, 2376000, 2400000, 2424000, 2448000, 2472000, 2496000, 2520000, 2544000, 2568000, 2592000, 2616000, 2640000, 2664000, 2688000, 2712000, 2736000, 2760000, 2784000, 2808000, 2832000, 2856000, 2880000, 2904000, 2928000, 2952000, 2976000, 3000000, 3024000, 3048000, 3072000, 3096000, 3120000, 3144000, 3168000, 3192000, 3216000, 3240000, 3264000, 3288000, 3312000, 3336000, 3360000, 3384000, 3408000, 3432000, 3456000, 3480000, 3504000, 3528000, 3552000, 3576000, 3600000, 3624000, 3648000, 3672000, 3696000, 3720000, 3744000, 3768000, 3792000, 3816000, 3840000, 3864000, 3888000, 3912000, 3936000, 3960000, 3984000, 4008000, 4032000, 4056000, 4080000, 4104000, 4128000, 4152000, 4176000, 4200000, 4224000, 4248000, 4272000, 4296000, 4320000, 4344000, 4368000, 4392000, 4416000, 4440000, 4464000, 4488000, 4512000, 4536000, 4560000, 4584000, 4608000, 4632000, 4656000, 4680000, 4704000, 4728000, 4752000, 4776000, 4800000, 4824000, 4848000, 4872000, 4896000, 4920000, 4944000, 4968000, 4992000, 5016000, 5040000, 5064000, 5088000, 5112000, 5136000, 5160000, 5184000, 5208000, 5232000, 5256000, 5280000, 5304000, 5328000, 5352000, 5376000, 5400000, 5424000, 5448000, 5472000, 5496000, 5520000, 5544000, 5568000, 5592000, 5616000, 5640000, 5664000, 5688000, 5712000, 5736000, 5760000, 5784000, 5808000, 5832000, 5856000, 5880000, 5904000, 5928000, 5952000, 5976000, 6000000, 6024000, 6048000, 6072000, 6096000, 6120000, 6144000, 6168000, 6192000, 6216000, 6240000, 6264000, 6288000, 6312000, 6336000, 6360000, 6384000, 6408000, 6432000, 6456000, 6480000, 6504000, 6528000, 6552000, 6576000, 6600000, 6624000, 6648000, 6672000, 6696000, 6720000, 6744000, 6768000, 6792000, 6816000, 6840000, 6864000, 6888000, 6912000, 6936000, 6960000, 6984000, 7008000, 7032000, 7056000, 7080000, 7104000, 7128000, 7152000, 7176000, 7200000, 7224000, 7248000, 7272000, 7296000, 7320000, 7344000, 7368000, 7392000, 7416000, 7440000, 7464000, 7488000, 7512000, 7536000, 7560000, 7584000, 7608000, 7632000, 7656000, 7680000, 7704000, 7728000, 7752000, 7776000, 7800000, 7824000, 7848000, 7872000, 7896000, 7920000, 7944000, 7968000, 7992000, 8016000, 8040000, 8064000, 8088000, 8112000, 8136000, 8160000, 8184000, 8208000, 8232000, 8256000, 8280000, 8304000, 8328000, 8352000, 8376000, 8400000, 8424000, 8448000, 8472000, 8496000, 8520000, 8544000, 8568000, 8592000, 8616000, 8640000, 8664000, 8688000, 8712000, 8736000, 8760000, 8784000, 8808000, 8832000, 8856000, 8880000, 8904000, 8928000, 8952000, 8976000, 9000000, 9024000, 9048000, 9072000, 9096000, 9120000, 9144000, 9168000, 9192000, 9216000, 9240000, 9264000, 9288000, 9312000, 9336000, 9360000, 9384000, 9408000, 9432000, 9456000, 9480000, 9504000, 9528000, 9552000, 9576000, 9600000, 9624000, 9648000, 9672000, 9696000, 9720000, 9744000, 9768000, 9792000, 9816000, 9840000, 9864000, 9888000, 9912000, 9936000, 9960000, 9984000, 10008000, 10032000, 10056000, 10080000, 10104000, 10128000, 10152000, 10176000, 10200000, 10224000, 10248000, 10272000, 10296000, 10320000, 10344000, 10368000, 10392000, 10416000, 10440000, 10464000, 10488000, 10512000, 10536000, 10560000, 10584000, 10608000, 10632000, 10656000, 10680000, 10704000, 10728000, 10752000, 10776000, 10800000, 10824000, 10848000, 10872000, 10896000, 10920000, 10944000, 10968000, 10992000, 11016000, 11040000, 11064000, 11088000, 11112000, 11136000, 11160000, 11184000, 11208000, 11232000, 11256000, 11280000, 11304000, 11328000, 11352000, 11376000, 11400000, 11424000, 11448000, 11472000, 11496000, 11520000, 11544000, 11568000, 11592000, 11616000, 11640000, 11664000, 11688000, 11712000, 11736000, 11760000, 11784000, 11808000, 11832000),
            table.microseconds.map { it.toInt() }
        )
    }
}